# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  SOURCE: 'elasticjob-ui'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.2.0
    - uses: actions/checkout@v2.2.0
      with:
        repository: apache/shardingsphere-elasticjob-ui
        ref: 'master'
        path: ${{ env.SOURCE }}

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: |
        ls -l
        mvn clean package -Prelease --file ${{ env.SOURCE }}/pom.xml
        cp ${{ env.SOURCE }}/shardingsphere-elasticjob-ui-distribution/*/target/*.tar.gz ./build/

    - uses: actions/upload-artifact@v2
      with:
        name: build
        path: build/*.tar.gz
      
    - name: show result
      run: |
        timestamp=`date '+%Y%m%d'`
        echo '::set-env name=TIMESTAMP::'$timestamp
        
        lite_ui_name=`ls ./build/ | grep lite-ui | sed 's/.tar.gz//g'`
        cloud_ui_name=`ls ./build/ | grep cloud-ui | sed 's/.tar.gz//g'`
        echo '::set-env name=ELASTIC_LITE_UI::'$lite_ui_name
        echo '::set-env name=ELASTIC_CLOUD_UI::'$cloud_ui_name
        
        t=`echo ${lite_ui_name##*elasticjob-}`
        version=`echo ${t%%-lite-ui*}`
        echo '::set-env name=VERSION::'$version
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: ${{ env.VERSION }}-${{ env.TIMESTAMP }}
        body: |
          Release ${{ env.VERSION }}
        draft: false
        prerelease: false

    - name: Upload ELASTIC-LITE-UI Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/${{ env.ELASTIC_LITE_UI }}.tar.gz
        asset_name: ${{ env.ELASTIC_LITE_UI }}.tar.gz
        asset_content_type: application/x-compressed-tar
        
    - name: Upload ELASTIC-CLOUD-UI Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/${{ env.ELASTIC_CLOUD_UI }}.tar.gz
        asset_name: ${{ env.ELASTIC_CLOUD_UI }}.tar.gz
        asset_content_type: application/x-compressed-tar
     
