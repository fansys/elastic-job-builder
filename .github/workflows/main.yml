# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Github CI For Elastic-Job-UI

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  SOURCE: 'elasticjob-ui'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.2.0
    
    # checkout elasticjob-ui
    - uses: actions/checkout@v2.2.0
      with:
        repository: apache/shardingsphere-elasticjob-ui
        ref: 'master'
        path: ${{ env.SOURCE }}

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: |
        ls -l
        mvn clean package -Prelease --file ${{ env.SOURCE }}/pom.xml
        cp ${{ env.SOURCE }}/shardingsphere-elasticjob-ui-distribution/*/target/*.tar.gz ./build/

    # set env
    - name: Set Environment
      run: |
        timestamp=`date '+%Y%m%d'`
        echo '::set-env name=TIMESTAMP::'$timestamp
        
        lite_ui_name=`ls ./build/ | grep lite-ui | sed 's/.tar.gz//g'`
        cloud_ui_name=`ls ./build/ | grep cloud-ui | sed 's/.tar.gz//g'`
        echo '::set-env name=ELASTIC_LITE_UI::'$lite_ui_name
        echo '::set-env name=ELASTIC_CLOUD_UI::'$cloud_ui_name
        
        t=`echo ${lite_ui_name##*elasticjob-}`
        version=`echo ${t%%-lite-ui*}`
        echo '::set-env name=VERSION::'$version

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ELASTIC_LITE_UI }}.tar.gz
        path: build/${{ env.ELASTIC_LITE_UI }}.tar.gz
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ELASTIC_CLOUD_UI }}.tar.gz
        path: build/${{ env.ELASTIC_CLOUD_UI }}.tar.gz
    
    # clease release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: ${{ env.VERSION }}-${{ env.TIMESTAMP }}
        body: |
          Release ${{ env.VERSION }}
        draft: false
        prerelease: false
    
    # upload release asset
    - name: Upload Cloud-ui Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/${{ env.ELASTIC_CLOUD_UI }}.tar.gz
        asset_name: ${{ env.ELASTIC_CLOUD_UI }}.tar.gz
        asset_content_type: application/x-compressed-tar

    - name: Upload Lite-ui Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/${{ env.ELASTIC_LITE_UI }}.tar.gz
        asset_name: ${{ env.ELASTIC_LITE_UI }}.tar.gz
        asset_content_type: application/x-compressed-tar
     
    # build and push docker images
    - name: Build Docker images
      run: |
        cd ./build/
        docker build --build-arg APP_NAME=${{ env.ELASTIC_CLOUD_UI }} -t fansy/elasticjob-cloud-ui .
        docker build --build-arg APP_NAME=${{ env.ELASTIC_LITE_UI }} -t fansy/elasticjob-lite-ui .
        
    - name: Login Docker Registry
      run: |
        bash ${{ github.workspace }}/scripts/login.sh ${{ secrets.ALIYUN_IMAGES_HUB_USER_NAME }} ${{ secrets.ALIYUN_IMAGES_HUB_TOKEN }}
        
    - name: Push Docker Images
      run: |
        docker tag fansy/elasticjob-cloud-ui fansy/elasticjob-cloud-ui:${{ env.VERSION }}-${{ env.TIMESTAMP }}
        docker tag fansy/elasticjob-lite-ui fansy/elasticjob-lite-ui:${{ env.VERSION }}-${{ env.TIMESTAMP }}
        bash ${{ github.workspace }}/scripts/push.sh fansy/elasticjob-cloud-ui
        bash ${{ github.workspace }}/scripts/push.sh fansy/elasticjob-lite-ui
        bash ${{ github.workspace }}/scripts/push.sh fansy/elasticjob-cloud-ui:${{ env.VERSION }}-${{ env.TIMESTAMP }}
        bash ${{ github.workspace }}/scripts/push.sh fansy/elasticjob-lite-ui:${{ env.VERSION }}-${{ env.TIMESTAMP }}
